{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","serviceWorker.js","index.js"],"names":["Stats","props","totalPlayers","players","length","totalPoints","reduce","total","player","score","react_default","a","createElement","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","_this","now","Date","setState","prevState","handleStopwatch","handleReset","_this2","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","_ref","title","components_Stats","components_Stopwatch","defaultProps","Counter","index","changeScore","Icon","viewBox","isHighScore","d","transform","width","height","Player","Fragment","removePlayer","id","components_Icon","name","components_Counter","PureComponent","AddPlayerForm","value","handleValueChange","e","target","handleSubmit","preventDefault","addPlayer","onSubmit","type","onChange","placeholder","App","prevPlayerId","handleScoreChange","delta","handleAddPlayer","concat","Object","toConsumableArray","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","apply","components_Header","components_Player","key","toString","components_AddPlayerForm","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a920309.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Stats = (props) => {\r\n\r\n\tconst totalPlayers = props.players.length;\r\n\tconst totalPoints = props.players.reduce((total, player) => {\r\n\t\treturn total + player.score;\r\n\t}, 0);\r\n\r\n\treturn (\r\n\t\t<table className=\"stats\">\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Players:</td>\r\n\t\t\t\t\t<td>{ totalPlayers }</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Total Points:</td>\r\n\t\t\t\t\t<td>{ totalPoints }</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\nStats.propTypes = {\r\n\tplayers: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tscore: PropTypes.number\r\n\t}))\r\n};\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n\r\n\tstate = {\r\n\t\tisRunning: false,\r\n\t\telapsedTime: 0,\r\n\t\tpreviousTime: 0,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.intervalID = setInterval(() => this.tick(), 100);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  clearInterval(this.intervalID);\r\n\t}\r\n\t\r\n\r\n\ttick = () => {\r\n\t\tif(this.state.isRunning) {\r\n\t\t\tconst now = Date.now();\r\n\t\t\tthis.setState( prevState => ({\r\n\t\t\t\tpreviousTime: now,\r\n\t\t\t\telapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\thandleStopwatch = () => {\r\n\t\tthis.setState( prevState => ({\r\n\t\t\tisRunning: !prevState.isRunning\r\n\t\t}));\r\n\t\tif(!this.state.isRunning) {\r\n\t\t\tthis.setState({ previousTime: Date.now() })\r\n\t\t}\r\n\t}\r\n\r\n\thandleReset = () => {\r\n\t\tthis.setState({ elapsedTime: 0 });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst seconds = Math.floor(this.state.elapsedTime / 1000);\r\n\t\treturn(\r\n\t\t\t<div className=\"stopwatch\">\r\n\t\t\t\t<h2>Stopwatch</h2>\r\n\t\t\t\t<span className=\"stopwatch-time\">\r\n\t\t\t\t\t{ seconds }\r\n\t\t\t\t</span>\r\n\t\t\t\t<button onClick={ this.handleStopwatch }>\r\n\t\t\t\t\t{ this.state.isRunning? 'Stop' : 'Start' }\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={ this.handleReset }>Reset</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Stopwatch;","import React from 'react';\r\n// import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stats from './Stats';\r\nimport Stopwatch from './Stopwatch';\r\n\r\n// class Header extends Component {\r\n// \trender() {\r\n// \t\treturn(\r\n// \t\t\t<header>\r\n// \t\t\t<Stats players={ this.props.players } />\r\n// \t\t\t\t<h1>{ this.props.title }</h1>\r\n// \t\t\t\t<Stopwatch />\r\n// \t\t\t</header>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\nconst Header = ({players, title}) => {\r\n\treturn ( \r\n\t\t<header>\r\n\t\t\t<Stats players={players} />\r\n\t\t\t<h1>{ title }</h1>\r\n\t\t\t<Stopwatch />\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tplayers: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nHeader.defaultProps = {\r\n\ttitle: 'Scoreboard'\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// class Counter extends Component {\r\n// \tincrementScore = () => {\r\n// \t\tthis.setState(prevState => ({\r\n// \t\t\tscore: prevState.score + 1\r\n// \t\t}));\r\n// \t}\r\n\r\n// \tdecrementScore = () => {\r\n// \t\tthis.setState(prevState => ({\r\n// \t\t\tscore: prevState.score - 1\r\n// \t\t}));\r\n// \t}\r\n\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div className=\"counter\">\r\n// \t\t\t\t<button className=\"counter-action decrement\"> - </button>\r\n// \t\t\t\t<span className=\"counter-score\">{this.props.score}</span>\r\n// \t\t\t\t<button className=\"counter-action increment\"> + </button>\r\n// \t\t\t</div>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\nconst Counter = ({index, score, changeScore}) => {\r\n\treturn (\r\n\t\t<div className=\"counter\">\r\n\t\t\t<button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\r\n\t\t\t<span className=\"counter-score\">{ score }</span>\r\n\t\t\t<button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCounter.propTypes = {\r\n\tindex: PropTypes.number,\r\n\tscore: PropTypes.number,\r\n\tchangeScore: PropTypes.func\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Icon = (props) => {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 44 35\" className={ props.isHighScore ? 'is-high-score' : null }>\r\n\t\t\t<path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n\t\t\t<rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\nIcon.propTypes = {\r\n\tisHighScore: PropTypes.bool\r\n};\r\n\r\nexport default Icon;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Counter from './Counter';\r\nimport Icon from './Icon';\r\n\r\nclass Player extends PureComponent {\r\n\trender() {\r\n\t\t// const {\r\n\t\t// \tname,\r\n\t\t// \tid,\r\n\t\t// \tscore,\r\n\t\t// \tindex,\r\n\t\t// \tremovePlayer,\r\n\t\t// \tchangeScore\r\n\t\t// } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"player\">\r\n\t\t\t\t\t<span className=\"player-name\">\r\n\t\t\t\t\t\t<button className=\"remove-player\" onClick={ () => this.props.removePlayer(this.props.id) }>✖</button>\r\n\t\t\t\t\t\t<Icon isHighScore={this.props.isHighScore} />\r\n\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<Counter\r\n\t\t\t\t\t\tindex={this.props.index}\r\n\t\t\t\t\t\tscore={this.props.score}\r\n\t\t\t\t\t\tchangeScore={this.props.changeScore}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// const Player = (props) => {\r\n// \treturn (\r\n// \t\t<div className=\"player\">\r\n// \t\t\t<span className=\"player-name\">\r\n// \t\t\t\t<button className=\"remove-player\" onClick={ () => props.removePlayer(props.id) }>✖</button>\r\n// \t\t\t\t{ props.name }\r\n// \t\t\t</span>\r\n\r\n// \t\t\t<Counter\r\n// \t\t\t\tindex={props.index}\r\n// \t\t\t\tscore={props.score}\r\n// \t\t\t\tchangeScore={props.changeScore}\r\n// \t\t\t/>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\nPlayer.propTypes = {\r\n\tchangeScore: PropTypes.func,\r\n\tremovePlayer: PropTypes.func,\r\n\tname: PropTypes.string.isRequired,\r\n\tscore: PropTypes.number.isRequired,\r\n\tid: PropTypes.number,\r\n\tindex: PropTypes.number,\r\n\tisHighScore: PropTypes.bool\r\n}\r\n\r\nexport default Player;","import React, { Component } from 'react';\r\n\r\nclass AddPlayerForm extends Component {\r\n\r\n\t/**\r\n\t * Remember to comment out the state while using the 'createRef' method\r\n\t */\r\n\tstate = {\r\n\t\tvalue: ''\r\n\t}\r\n\r\n\t/**\r\n\t * Another way to get data input from user such as form\r\n\t * However, this is not the conventional way and the original way of handling setState is *highly* recommended\r\n\t */\r\n\t// playerInput = React.createRef();\r\n\r\n\thandleValueChange = (e) => {\r\n\t\tthis.setState({ value: e.target.value});\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t/**\r\n\t\t * The 2 lines below are meant for 'createRef' purpose\r\n\t\t */\r\n\t\t// this.props.addPlayer(this.playerInput.current.value);\r\n\t\t// e.currentTarget.reset();\r\n\r\n\t\t/**\r\n\t\t * Toggle the 2 lines below if using 'createRef' method\r\n\t\t */\r\n\t\tthis.props.addPlayer(this.state.value);\r\n\t\tthis.setState({value: ''});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t// ref={this.playerInput}\t// The line below is used for the createRef\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * The two line referencing 'value' and 'onChange' can be omitted if using 'createRef' method\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\tonChange={this.handleValueChange}\r\n\t\t\t\t\tplaceholder=\"Enter a player's name\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tvalue=\"Add Player\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddPlayerForm;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n\tstate = {\n\t\tplayers: [\n\t\t\t{\n\t\t\t\t'name': 'Guil',\n\t\t\t\t'score': 0,\n\t\t\t\t'id': 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Treasure',\n\t\t\t\t'score': 0,\n\t\t\t\t'id': 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'Ashley',\n\t\t\t\t'score': 0,\n\t\t\t\t'id': 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t'name': 'James',\n\t\t\t\t'score': 0,\n\t\t\t\t'id': 4\n\t\t\t}\n\t\t]\n\t};\n\n\t// player id counter\n\tprevPlayerId = this.state.players.length;\n\n\thandleScoreChange = (index, delta) => {\n\t\t// console.log(delta)\n\t\tthis.setState(prevState => ({\n\t\t\tscore: prevState.players[index].score += delta\n\t\t}));\n\t}\n\n\thandleAddPlayer = (name) => {\n\t\tthis.setState( prevState => {\n\t\t\treturn {\n\t\t\t\tplayers: [\n\t\t\t\t\t...prevState.players,\n\t\t\t\t\t{\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tscore: 0,\n\t\t\t\t\t\tid: this.prevPlayerId += 1\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t}\n\n\thandleRemovePlayer = (id) => {\n\t\tthis.setState( prevState => {\n\t\t\treturn {\n\t\t\t\tplayers: prevState.players.filter( p => p.id !== id)\n\t\t\t};\n\t\t});\n\t}\n\n\tgetHighScore = () => {\n\t\tconst scores = this.state.players.map( p => p.score );\n\t\tconst highScore = Math.max(...scores);\n\t\tif (highScore) {\n\t\t  return highScore;\n\t\t} \n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst highScore = this.getHighScore();\n\n\t\treturn (\n\t\t\t<div className=\"scoreboard\">\n\t\t\t\t<Header\n\t\t\t\t\ttitle=\"Scoreboard\"\n\t\t\t\t\tplayers={this.state.players}\n\t\t\t\t/>\n\t\t\t\t{this.state.players.map((player, index) =>\n\t\t\t\t\t<Player\n\t\t\t\t\t\tname={player.name}\n\t\t\t\t\t\tscore={player.score}\n\t\t\t\t\t\tid={player.id}\n\t\t\t\t\t\tkey={player.id.toString()}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tchangeScore={this.handleScoreChange}\n\t\t\t\t\t\tremovePlayer={this.handleRemovePlayer}\n\t\t\t\t\t\tisHighScore={highScore === player.score}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<AddPlayerForm addPlayer={this.handleAddPlayer} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}